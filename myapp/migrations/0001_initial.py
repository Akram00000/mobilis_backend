# Generated by Django 5.0.7 on 2025-03-30 13:43

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.BooleanField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.BooleanField()),
                ("is_active", models.BooleanField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Commune",
            fields=[
                ("name", models.TextField()),
                ("id", models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "commune",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Conversation",
            fields=[
                ("created_at", models.DateTimeField()),
                ("id", models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "conversation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Coordinates",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField()),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("lattitude", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "coordinates",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.SmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                ("created_at", models.DateTimeField()),
                ("text", models.TextField(blank=True, null=True)),
                ("id", models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "message",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PointOfSale",
            fields=[
                ("last_visit", models.DateTimeField(blank=True, null=True)),
                ("longitude", models.FloatField()),
                ("latitude", models.FloatField()),
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("status", models.SmallIntegerField()),
            ],
            options={
                "db_table": "point_of_sale",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("role", models.TextField()),
                ("phone", models.TextField(blank=True, null=True)),
                ("email", models.TextField(blank=True, null=True)),
                ("password", models.TextField(blank=True, null=True)),
                ("first_name", models.TextField(blank=True, null=True)),
                ("last_name", models.TextField(blank=True, null=True)),
                ("last_seen", models.DateTimeField(blank=True, null=True)),
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("status", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Visit",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("visit_time", models.DateTimeField()),
                ("duration", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "visit",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Wilaya",
            fields=[
                ("name", models.TextField()),
                ("id", models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "wilaya",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Zone",
            fields=[
                ("created_at", models.DateTimeField()),
                ("id", models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "zone",
                "managed": False,
            },
        ),
    ]
